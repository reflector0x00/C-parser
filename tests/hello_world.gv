digraph program {
	node_000000000018F600 [ label = "translation_unit" color = red ] 
	node_000000000018F600 -> node_00000000007532D0
	node_00000000007532D0 [ label = "external_declaration" color = red ] 
	node_00000000007532D0 -> node_0000000000753210
	node_0000000000753210 [ label = "function_definition" color = red ] 
	node_0000000000753210 -> node_000000000074B310
	node_0000000000753210 -> node_000000000074C990
	node_0000000000753210 -> node_0000000000753150
	node_000000000074B310 [ label = "declaration_specifiers" color = red ] 
	node_000000000074B310 -> node_000000000074B250
	node_000000000074C990 [ label = "declarator" color = red ] 
	node_000000000074C990 -> node_000000000074C8D0
	node_0000000000753150 [ label = "compound_statement" color = red ] 
	node_0000000000753150 -> node_000000000074CA50
	node_0000000000753150 -> node_0000000000752FD0
	node_0000000000753150 -> node_0000000000753090
	node_000000000074B250 [ label = "type_specifier" color = red ] 
	node_000000000074B250 -> node_0000000000748060
	node_000000000074C8D0 [ label = "direct_declarator" color = red ] 
	node_000000000074C8D0 -> node_000000000074B490
	node_000000000074C8D0 -> node_000000000074B550
	node_000000000074C8D0 -> node_000000000074C750
	node_000000000074C8D0 -> node_000000000074C810
	node_000000000074CA50 [ label = "{" color = blue ] 
	node_0000000000752FD0 [ label = "block_item_list" color = red ] 
	node_0000000000752FD0 -> node_0000000000751C90
	node_0000000000752FD0 -> node_0000000000752F10
	node_0000000000753090 [ label = "}" color = blue ] 
	node_0000000000748060 [ label = "int" color = blue ] 
	node_000000000074B490 [ label = "direct_declarator" color = red ] 
	node_000000000074B490 -> node_000000000074B3D0
	node_000000000074B550 [ label = "(" color = blue ] 
	node_000000000074C750 [ label = "parameter_type_list" color = red ] 
	node_000000000074C750 -> node_000000000074C690
	node_000000000074C810 [ label = ")" color = blue ] 
	node_0000000000751C90 [ label = "block_item_list" color = red ] 
	node_0000000000751C90 -> node_0000000000751BD0
	node_0000000000752F10 [ label = "block_item" color = red ] 
	node_0000000000752F10 -> node_0000000000752E50
	node_000000000074B3D0 [ label = "main" color = blue ] 
	node_000000000074C690 [ label = "parameter_list" color = red ] 
	node_000000000074C690 -> node_000000000074BB50
	node_000000000074C690 -> node_000000000074BC10
	node_000000000074C690 -> node_000000000074C5D0
	node_0000000000751BD0 [ label = "block_item" color = red ] 
	node_0000000000751BD0 -> node_0000000000751B10
	node_0000000000752E50 [ label = "statement" color = red ] 
	node_0000000000752E50 -> node_0000000000752D90
	node_000000000074BB50 [ label = "parameter_list" color = red ] 
	node_000000000074BB50 -> node_000000000074BA90
	node_000000000074BC10 [ label = "," color = blue ] 
	node_000000000074C5D0 [ label = "parameter_declaration" color = red ] 
	node_000000000074C5D0 -> node_000000000074BE50
	node_000000000074C5D0 -> node_000000000074C510
	node_0000000000751B10 [ label = "statement" color = red ] 
	node_0000000000751B10 -> node_0000000000751A50
	node_0000000000752D90 [ label = "jump_statement" color = red ] 
	node_0000000000752D90 -> node_0000000000751D50
	node_0000000000752D90 -> node_0000000000752C10
	node_0000000000752D90 -> node_0000000000752CD0
	node_000000000074BA90 [ label = "parameter_declaration" color = red ] 
	node_000000000074BA90 -> node_000000000074B790
	node_000000000074BA90 -> node_000000000074B9D0
	node_000000000074BE50 [ label = "declaration_specifiers" color = red ] 
	node_000000000074BE50 -> node_000000000074BD90
	node_000000000074C510 [ label = "declarator" color = red ] 
	node_000000000074C510 -> node_000000000074BFD0
	node_000000000074C510 -> node_000000000074C450
	node_0000000000751A50 [ label = "expression_statement" color = red ] 
	node_0000000000751A50 -> node_00000000007518D0
	node_0000000000751A50 -> node_0000000000751990
	node_0000000000751D50 [ label = "return" color = blue ] 
	node_0000000000752C10 [ label = "expression" color = red ] 
	node_0000000000752C10 -> node_0000000000752B50
	node_0000000000752CD0 [ label = ";" color = blue ] 
	node_000000000074B790 [ label = "declaration_specifiers" color = red ] 
	node_000000000074B790 -> node_000000000074B6D0
	node_000000000074B9D0 [ label = "declarator" color = red ] 
	node_000000000074B9D0 -> node_000000000074B910
	node_000000000074BD90 [ label = "type_specifier" color = red ] 
	node_000000000074BD90 -> node_000000000074BCD0
	node_000000000074BFD0 [ label = "pointer" color = red ] 
	node_000000000074BFD0 -> node_000000000074BF10
	node_000000000074C450 [ label = "direct_declarator" color = red ] 
	node_000000000074C450 -> node_000000000074C210
	node_000000000074C450 -> node_000000000074C2D0
	node_000000000074C450 -> node_000000000074C390
	node_00000000007518D0 [ label = "expression" color = red ] 
	node_00000000007518D0 -> node_0000000000751810
	node_0000000000751990 [ label = ";" color = blue ] 
	node_0000000000752B50 [ label = "assignment_expression" color = red ] 
	node_0000000000752B50 -> node_0000000000752A90
	node_000000000074B6D0 [ label = "type_specifier" color = red ] 
	node_000000000074B6D0 -> node_000000000074B610
	node_000000000074B910 [ label = "direct_declarator" color = red ] 
	node_000000000074B910 -> node_000000000074B850
	node_000000000074BCD0 [ label = "char" color = blue ] 
	node_000000000074BF10 [ label = "*" color = blue ] 
	node_000000000074C210 [ label = "direct_declarator" color = red ] 
	node_000000000074C210 -> node_000000000074C150
	node_000000000074C2D0 [ label = "[" color = blue ] 
	node_000000000074C390 [ label = "]" color = blue ] 
	node_0000000000751810 [ label = "assignment_expression" color = red ] 
	node_0000000000751810 -> node_0000000000751750
	node_0000000000752A90 [ label = "conditional_expression" color = red ] 
	node_0000000000752A90 -> node_00000000007529D0
	node_000000000074B610 [ label = "int" color = blue ] 
	node_000000000074B850 [ label = "argc" color = blue ] 
	node_000000000074C150 [ label = "argv" color = blue ] 
	node_0000000000751750 [ label = "conditional_expression" color = red ] 
	node_0000000000751750 -> node_0000000000751690
	node_00000000007529D0 [ label = "logical_or_expression" color = red ] 
	node_00000000007529D0 -> node_0000000000752910
	node_0000000000751690 [ label = "logical_or_expression" color = red ] 
	node_0000000000751690 -> node_00000000007515D0
	node_0000000000752910 [ label = "logical_and_expression" color = red ] 
	node_0000000000752910 -> node_0000000000752850
	node_00000000007515D0 [ label = "logical_and_expression" color = red ] 
	node_00000000007515D0 -> node_0000000000751510
	node_0000000000752850 [ label = "inclusive_or_expression" color = red ] 
	node_0000000000752850 -> node_0000000000752790
	node_0000000000751510 [ label = "inclusive_or_expression" color = red ] 
	node_0000000000751510 -> node_0000000000751450
	node_0000000000752790 [ label = "exclusive_or_expression" color = red ] 
	node_0000000000752790 -> node_00000000007526D0
	node_0000000000751450 [ label = "exclusive_or_expression" color = red ] 
	node_0000000000751450 -> node_0000000000751390
	node_00000000007526D0 [ label = "and_expression" color = red ] 
	node_00000000007526D0 -> node_0000000000752610
	node_0000000000751390 [ label = "and_expression" color = red ] 
	node_0000000000751390 -> node_00000000007512D0
	node_0000000000752610 [ label = "equality_expression" color = red ] 
	node_0000000000752610 -> node_0000000000752550
	node_00000000007512D0 [ label = "equality_expression" color = red ] 
	node_00000000007512D0 -> node_0000000000751210
	node_0000000000752550 [ label = "relational_expression" color = red ] 
	node_0000000000752550 -> node_0000000000752490
	node_0000000000751210 [ label = "relational_expression" color = red ] 
	node_0000000000751210 -> node_0000000000751150
	node_0000000000752490 [ label = "shift_expression" color = red ] 
	node_0000000000752490 -> node_00000000007523D0
	node_0000000000751150 [ label = "shift_expression" color = red ] 
	node_0000000000751150 -> node_0000000000751090
	node_00000000007523D0 [ label = "additive_expression" color = red ] 
	node_00000000007523D0 -> node_0000000000752310
	node_0000000000751090 [ label = "additive_expression" color = red ] 
	node_0000000000751090 -> node_0000000000750FD0
	node_0000000000752310 [ label = "multiplicative_expression" color = red ] 
	node_0000000000752310 -> node_0000000000752250
	node_0000000000750FD0 [ label = "multiplicative_expression" color = red ] 
	node_0000000000750FD0 -> node_0000000000750F10
	node_0000000000752250 [ label = "cast_expression" color = red ] 
	node_0000000000752250 -> node_0000000000752110
	node_0000000000750F10 [ label = "cast_expression" color = red ] 
	node_0000000000750F10 -> node_0000000000750E50
	node_0000000000752110 [ label = "unary_expression" color = red ] 
	node_0000000000752110 -> node_0000000000752050
	node_0000000000750E50 [ label = "unary_expression" color = red ] 
	node_0000000000750E50 -> node_0000000000750D90
	node_0000000000752050 [ label = "postfix_expression" color = red ] 
	node_0000000000752050 -> node_0000000000751F90
	node_0000000000750D90 [ label = "postfix_expression" color = red ] 
	node_0000000000750D90 -> node_000000000074CC90
	node_0000000000750D90 -> node_000000000074CD50
	node_0000000000750D90 -> node_0000000000750C10
	node_0000000000750D90 -> node_0000000000750CD0
	node_0000000000751F90 [ label = "primary_expression" color = red ] 
	node_0000000000751F90 -> node_0000000000751ED0
	node_000000000074CC90 [ label = "postfix_expression" color = red ] 
	node_000000000074CC90 -> node_000000000074CBD0
	node_000000000074CD50 [ label = "(" color = blue ] 
	node_0000000000750C10 [ label = "argument_expression_list" color = red ] 
	node_0000000000750C10 -> node_0000000000750B50
	node_0000000000750CD0 [ label = ")" color = blue ] 
	node_0000000000751ED0 [ label = "constant" color = red ] 
	node_0000000000751ED0 -> node_0000000000751E10
	node_000000000074CBD0 [ label = "primary_expression" color = red ] 
	node_000000000074CBD0 -> node_000000000074CB10
	node_0000000000750B50 [ label = "assignment_expression" color = red ] 
	node_0000000000750B50 -> node_0000000000750A90
	node_0000000000751E10 [ label = "0" color = blue ] 
	node_000000000074CB10 [ label = "printf" color = blue ] 
	node_0000000000750A90 [ label = "conditional_expression" color = red ] 
	node_0000000000750A90 -> node_00000000007509D0
	node_00000000007509D0 [ label = "logical_or_expression" color = red ] 
	node_00000000007509D0 -> node_0000000000750910
	node_0000000000750910 [ label = "logical_and_expression" color = red ] 
	node_0000000000750910 -> node_0000000000750850
	node_0000000000750850 [ label = "inclusive_or_expression" color = red ] 
	node_0000000000750850 -> node_0000000000750790
	node_0000000000750790 [ label = "exclusive_or_expression" color = red ] 
	node_0000000000750790 -> node_00000000007506D0
	node_00000000007506D0 [ label = "and_expression" color = red ] 
	node_00000000007506D0 -> node_0000000000750610
	node_0000000000750610 [ label = "equality_expression" color = red ] 
	node_0000000000750610 -> node_0000000000750550
	node_0000000000750550 [ label = "relational_expression" color = red ] 
	node_0000000000750550 -> node_0000000000750490
	node_0000000000750490 [ label = "shift_expression" color = red ] 
	node_0000000000750490 -> node_00000000007503D0
	node_00000000007503D0 [ label = "additive_expression" color = red ] 
	node_00000000007503D0 -> node_0000000000750310
	node_0000000000750310 [ label = "multiplicative_expression" color = red ] 
	node_0000000000750310 -> node_0000000000750250
	node_0000000000750250 [ label = "cast_expression" color = red ] 
	node_0000000000750250 -> node_000000000074D110
	node_000000000074D110 [ label = "unary_expression" color = red ] 
	node_000000000074D110 -> node_000000000074D050
	node_000000000074D050 [ label = "postfix_expression" color = red ] 
	node_000000000074D050 -> node_000000000074CF90
	node_000000000074CF90 [ label = "primary_expression" color = red ] 
	node_000000000074CF90 -> node_000000000074CED0
	node_000000000074CED0 [ label = "string" color = red ] 
	node_000000000074CED0 -> node_000000000074CE10
	node_000000000074CE10 [ label = "\"Hello, world!\\n\"" color = blue ] 
}